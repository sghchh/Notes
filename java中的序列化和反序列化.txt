序列化和反序列化顾名思义的目的是把对象保存到物理节点或者从物理节点获得对象。
一个对象要想被序列化，要想能够序列化，这给对象在定义的时候必须实现两个接口（Serializable，Externalizable）中的一个，
实现Serializable接口不用实现任何方法，这个接口只是用来标记这个类可以被序列化
序列化对象的步骤：
1.创建一个ObjectOutputStream对象，这是一个处理流，所以必须传入一个节点流参数。
2.调用该对象的writeObject（Object）方法来写入

反序列化的步骤：
1.创建一个ObjectInputStream对象，这是一个处理流，所以必须传入一个节点流参数。
2.调用该对象的Object readObject（）方法来读取对象。
注：读取的是对象的数据，而不是java类，如果知道读取的对象的类型，可以强制类型转换成该对象。
如果使用序列化写入多个对象，则反序列化的时候也必须按照序列化写入的顺序来读取
如果一个可序列化的类有多个父类时，这些父类必须有无参构造器和可序列化

对象引用的序列化：
一个对象同时被其他的多个对象引用的时候，只会在第一个引用的时候序列化，其他的时候都会输出一个序列化编号，而不是再次序列化，从而避免了同一个对象被序列化完后变成了多个。但是这种机制使得对象被序列化后如果其中的数据发生改变，则序列化的结果并不会变。